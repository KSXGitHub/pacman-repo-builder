name: Deployment

on:
  push:
    tags:
      - '*.*.*'

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        rust:
          - '1.46.0'
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        uses: ./ci/github-actions/arch-run
        with:
          command: cargo build --locked

      - name: Test
        uses: ./ci/github-actions/arch-run
        with:
          command: cargo test

      - name: Check formatting
        uses: ./ci/github-actions/arch-run
        with:
          command: ./fmt.sh

      - name: Clippy check
        uses: ./ci/github-actions/arch-run
        with:
          command: ./clippy.sh

  build_linux:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          override: 'true'
          default: 'true'

      - name: Build
        run: cargo build --release

      - name: Strip all debug symbols
        run: strip --strip-all target/release/build-pacman-repo

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-pacman-repo
          path: target/release/build-pacman-repo

  create_release:
    name: Create Release

    needs:
      - test
      - build_linux

    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_type: ${{ steps.release_type.outputs.release_type }}
      is_release: ${{ steps.release_type.outputs.is_release }}
      is_prerelease: ${{ steps.release_type.outputs.is_prerelease }}
      release_tag: ${{ steps.release_type.outputs.release_tag }}

    steps:
      - uses: actions/checkout@v2

      - name: Install APT packages
        run: sudo apt install -y python3 python3-toml

      - name: Determine release type
        id: release_type
        run: ./ci/github-actions/release-type.py3
        env:
          RELEASE_TAG: ${{ github.ref }}

      - name: Create Release
        id: create_release
        if: steps.release_type.outputs.is_release == 'true'
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_type.outputs.release_tag }}
          release_name: ${{ steps.release_type.outputs.release_tag }}
          draft: 'false'
          prerelease: ${{ steps.release_type.outputs.is_prerelease }}

  upload_release_assets:
    name: Upload Release Assets

    needs:
      - create_release
      - test
      - build_linux

    runs-on: ubuntu-latest

    if: needs.create_release.outputs.is_release == 'true'

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: build-pacman-repo

      - name: Release executable (UNIX)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./build-pacman-repo
          asset_name: build-pacman-repo
          asset_content_type: application/x-pie-executable

  upload_checksums:
    name: Upload Checksums

    needs:
      - create_release
      - test
      - build_linux

    if: needs.create_release.outputs.is_release == 'true'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2.0.5
        with:
          path: ./downloads

      - name: Flatten directory
        run: ./ci/github-actions/expose-release-artifacts.sh

      - name: Create checksums
        run: ./ci/github-actions/create-checksums.sh

      - name: Upload as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: checksums
          path: sha*sum.txt

      - name: Release sha1sum
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./sha1sum.txt
          asset_name: sha1sum.txt
          asset_content_type: text/plain

      - name: Release sha256sum
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./sha256sum.txt
          asset_name: sha256sum.txt
          asset_content_type: text/plain

      - name: Release sha512sum
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./sha512sum.txt
          asset_name: sha512sum.txt
          asset_content_type: text/plain
