name: Test

on:
  - push
  - pull_request

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Rust Cargo Registry
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/work/_temp/_github_home/.cargo/registry
          key: ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - name: Cache Rust Cargo Index
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/work/_temp/_github_home/.cargo/git
          key: ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - name: Cache Rust Build
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: target
          key: ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - name: Build
        uses: ./ci/github-actions/arch-run
        with:
          command: cargo build --locked

      - name: Test
        uses: ./ci/github-actions/arch-run
        with:
          command: cargo test

  clippy_check:
    name: Clippy

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Rust Cargo Registry
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/.cargo/registry
          key: ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-cargo-registry-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - name: Cache Rust Cargo Index
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: ~/.cargo/git
          key: ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-cargo-index-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - name: Cache Rust Build
        uses: actions/cache@v2
        timeout-minutes: 1
        continue-on-error: true
        with:
          path: target
          key: ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-build-${{ hashFiles('rust-toolchain') }}-${{ runner.os }}-

      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          components: clippy
          override: 'true'
          default: 'true'

      - name: Use clippy to lint code
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy Report (${{ hashFiles('rust-toolchain') }}, ${{ matrix.os }})
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

  fmt_check:
    name: Fmt

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          components: rustfmt
          override: 'true'
          default: 'true'

      - name: Check code formatting
        run: cargo fmt -- --check
